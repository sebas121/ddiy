import { Observable, Operation, NextLink, FetchResult } from 'apollo-link-core';
export declare type BatchHandler = (operations: Operation[], forward: (NextLink | undefined)[]) => Observable<FetchResult[]> | null;
export interface BatchableRequest {
    operation: Operation;
    forward?: NextLink;
    observable?: Observable<FetchResult>;
    next?: (result: FetchResult) => void;
    error?: (error: Error) => void;
    complete?: () => void;
}
export declare class OperationBatcher {
    queuedRequests: BatchableRequest[];
    private batchInterval;
    private batchMax;
    private batchHandler;
    constructor({batchInterval, batchMax, batchHandler}: {
        batchInterval: number;
        batchMax?: number;
        batchHandler: BatchHandler;
    });
    enqueueRequest(request: BatchableRequest): Observable<FetchResult>;
    consumeQueue(): (Observable<FetchResult> | undefined)[] | undefined;
    private scheduleQueueConsumption();
}
