(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(factory((global.batchHttpLink = {})));
}(this, (function (exports) { 'use strict';

var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_link_core_1 = require("apollo-link-core");
var apollo_fetch_1 = require("apollo-fetch");
var apollo_link_batch_1 = require("apollo-link-batch");
var printer_1 = require("graphql/language/printer");
var BatchHttpLink = (function (_super) {
    __extends(BatchHttpLink, _super);
    function BatchHttpLink(fetchParams) {
        var _this = _super.call(this) || this;
        _this.headers = {};
        _this.batchInterval = (fetchParams && fetchParams.batchInterval) || 10;
        _this.batchMax = (fetchParams && fetchParams.batchMax) || 10;
        _this.apolloFetch =
            (fetchParams && fetchParams.fetch) ||
                apollo_fetch_1.createApolloFetch({ uri: fetchParams && fetchParams.uri });
        _this.apolloFetch.batchUse(function (request, next) {
            request.options.headers = __assign({}, request.options.headers, _this.headers);
            next();
        });
        var batchHandler = function (operations) {
            return new apollo_link_core_1.Observable(function (observer) {
                var printedOperations = operations.map(function (operation) { return (__assign({}, operation, { query: printer_1.print(operation.query) })); });
                _this.apolloFetch(printedOperations)
                    .then(function (data) {
                    observer.next(data);
                    observer.complete();
                })
                    .catch(observer.error.bind(observer));
            });
        };
        _this.batcher = new apollo_link_batch_1.default({
            batchInterval: _this.batchInterval,
            batchMax: _this.batchMax,
            batchHandler: batchHandler,
        });
        return _this;
    }
    BatchHttpLink.prototype.request = function (operation) {
        return this.batcher.request(operation);
    };
    return BatchHttpLink;
}(apollo_link_core_1.ApolloLink));
exports.default = BatchHttpLink;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=bundle.umd.js.map
